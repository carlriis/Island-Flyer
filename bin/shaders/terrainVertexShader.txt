#version 150 core

in vec3 normal;

in vec3 position;

out vec3 toLightVector;
out vec3 toCameraVector;
out float visibility;
out vec3 surfaceNormal;
out vec4 colour;

uniform vec3 playerPosition;
uniform mat4 transformationMatrix;
uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;
uniform vec3 lightPosition;

const float density = 0.003;
const float gradient = 5.0;

void main(void) {
	vec4 worldPosition = transformationMatrix * vec4(position,1.0);
    vec4 positionRelativeToCam = viewMatrix * worldPosition;
    gl_Position = projectionMatrix * positionRelativeToCam;
   

    	toLightVector = lightPosition - worldPosition.xyz;
    
    
    
    surfaceNormal = (transformationMatrix * vec4(normal, 0.0)).xyz;
    
    toCameraVector = (inverse(viewMatrix) * vec4(0.0,0.0,0.0,1.0)).xyz - worldPosition.xyz;
   
   	vec2 positionFromVertexToPlayer =  vec2(playerPosition.x - worldPosition.x, playerPosition.z - worldPosition.z);
    float distance = length(positionFromVertexToPlayer);
    visibility = exp(-pow((distance*density),gradient));
    visibility = clamp(visibility,0.0,1.0);
    
    // Colours
    colour = vec4(0.44313725490196076, 0.6215686274509804, 0.09019607843137255, 1); // Grass
	float colourAdd = -worldPosition.y * 0.004;
	
	
	if (worldPosition.y < 15) { // Sand
		colour = vec4(225.0/255.0, 225.0/255.0, 134.0/255.0, 1);
	}
	
	if (worldPosition.y == 0) { // Water 
		colour = vec4(0, 128.0/255.0, 183.0/255.0, 1);
	}
	

	colour += colourAdd;
    
}