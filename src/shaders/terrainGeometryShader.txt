#version 430 core
layout (triangles) in;
layout (triangle_strip, max_vertices = 3) out;

in vec3 toLightVector[][4];
in vec3 toCameraVector[];
in float visibility[];
in vec3 surfaceNormal[];
in vec4 colour[];

out vec3 toLightVectorG[4];
out vec3 toCameraVectorG;
out float visibilityG;
out vec3 surfaceNormalG;
out vec4 colourG;

uniform vec3 lightPosition[4];

void main(void){
	for(int i=0;i<3;i++){
   		gl_Position = gl_in[i].gl_Position;

		for (int j=0; j<3; j++) {
			toLightVectorG[j] = toLightVector[i][j];
		}
		
		toCameraVectorG = toCameraVector[i];
		visibilityG = visibility[i];
		surfaceNormalG = surfaceNormal[0];
		colourG = (colour[0] + colour[1] + colour[2])/3;
		
		
		EmitVertex();
	}
	
	EndPrimitive();

}